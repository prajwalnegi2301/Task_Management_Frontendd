import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import LeftSidebar from "@/components/LeftSidebar";
import RightSidebar from "@/components/RightSidebar";
import React from "react";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};




export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;

}>) {

  return (
    <html lang="en">
      <head>
        <title>My App</title>
      </head>
      <body className={inter.className}>
        <LeftSidebar />
        <div>{children}</div>
        <RightSidebar />
      </body>
    </html>
  );
}




// import type { Metadata } from "next";
// import { Inter } from "next/font/google";
// import "./globals.css";
// import LeftSidebar from "@/components/LeftSidebar";
// import RightSidebar from "@/components/RightSidebar";
// import React, { useState, createContext, ReactNode } from "react";

// const inter = Inter({ subsets: ["latin"] });

// const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// interface User {
//   name: string;
//   email: string;
//   role: string;
//   phone: string;
//   gender: string;
// }

// interface ContextProps {
//   isUserAuthenticated: boolean;
//   setIsUserAuthenticated: (value: boolean) => void;
//   user: User;
//   setUser: (user: User) => void;
// }

// const defaultUser: User = {
//   name: "",
//   email: "",
//   role: "",
//   phone: "",
//   gender: "",
// };

// export const Context = createContext<ContextProps>({
//   isUserAuthenticated: false,
//   setIsUserAuthenticated: () => {},
//   user: defaultUser,
//   setUser: () => {},
// });

// export default function RootLayout({
//   children,
// }: {
//   children: ReactNode;
// }) {
//   const [isUserAuthenticated, setIsUserAuthenticated] = useState(false);
//   const [user, setUser] = useState<User>(defaultUser);

//   return (
//     <html lang="en">
//       <Context.Provider
//         value={{ isUserAuthenticated, setIsUserAuthenticated, user, setUser }}
//       >
//         <LeftSidebar />
//         <body className={inter.className}>{children}</body>
//         <RightSidebar />
//       </Context.Provider>
//     </html>
//   );
// }
